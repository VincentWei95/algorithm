二分法查找元素，如果查找不到返回应该插入的索引位置
题目可以理解为：二分法查找到最后出现的位置（也就是在数组中第一次出现的位置）

如果是查找二分法第一次出现的元素（也就是在数组中最后一次出现的位置），就是 nums[mid] > target 判断

public int halfSearch(int[] nums, int target) {
    int left = 0;
    int right = nums.length - 1;
    int ans = nums.length - 1;
    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (nums[mid] >= target) { // 二分到结束时就是元素应该插入的位置，即在数组中第一次出现的位置
            right = mid - 1;
            ans = mid;
        } else {
            left = mid + 1;
        }
    }
    return ans;
}